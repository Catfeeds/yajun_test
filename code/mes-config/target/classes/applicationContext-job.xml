<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- <bean id="jobServerFactory" class="com.wis.utils.scheduler.JobServerFactory" 
		destroy-method="shutdownServer" /> <bean id="jobServer" factory-method="getServerInstance" 
		factory-bean="jobServerFactory" lazy-init="false" init-method="start"> <property 
		name="jobLoader" ref="defaultJobLoader" /> <property name="scanInterval" 
		value="60000" /> </bean> -->
	<bean id="quartzScheduler" lazy-init="false" destroy-method="destroy"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource">
			<ref bean="masterDataSource" />
		</property>
		<!--必须的，QuartzScheduler延时启动，应用启动完后QuartzScheduler再启动 -->
		<property name="startupDelay" value="5" />
		<!--设置自动启动 -->
		<property name="autoStartup" value="false" />
		<!-- SchedulerFactoryBean这个类中把spring上下 文以key/value的方式存放在了SchedulerContext中了，可以用applicationContextSchedulerContextKey所 
			定义的key得到对应spring 的ApplicationContext -->
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="configLocation" value="classpath:quartz.properties" />
	</bean>
</beans>