package com.wis.mes.dakin.report.controller;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.apache.http.conn.params.ConnConnectionParamBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.wis.basis.common.utils.ActionUtils;
import com.wis.basis.common.utils.ConstantUtils;
import com.wis.basis.common.web.model.BootstrapTableQueryCriteria;
import com.wis.basis.common.web.model.JsonActionResult;
import com.wis.core.dao.OrderEnum;
import com.wis.core.dao.QueryCriteria;
import com.wis.core.framework.entity.DictEntry;
import com.wis.core.framework.service.DictEntryService;
import com.wis.mes.master.equipment.entity.TmEquipment;
import com.wis.mes.master.equipment.service.TmEquipmentService;
import com.wis.mes.production.metalplate.service.TbMetalPlateProductionRecordService;

/**
 * @author caixia
 *
 */
@Controller
@RequestMapping("/productMrg")
public class ProductMrgController {
	@Autowired
	private TbMetalPlateProductionRecordService productionRecordService;
	@Autowired
	private DictEntryService entryService;
	@Autowired
	private TmEquipmentService equipmentService;
	
	@RequestMapping("/productMrgReport")
	public ModelAndView productMrgReport(ModelMap modelMap) {
		QueryCriteria criteria = new QueryCriteria();
		criteria.setFuzzyQueryFileds(Arrays.asList(new String[] { "no" }));
		criteria.getQueryCondition().put("no", ConstantUtils.EQUIPMENT_BJALL_NO);
		List<DictEntry> dictEntrys = equipmentService.queryDictItem(criteria);
		modelMap.addAttribute("equipmentArray",dictEntrys);
		modelMap.addAttribute("shiftArray",entryService.getEntryByTypeCode(ConstantUtils.SHIFT_TYPE));
		if(null != dictEntrys && dictEntrys.size() > 0) {
			modelMap.addAttribute("equipmentId",dictEntrys.get(0).getCode());
		}
		return new ModelAndView("/report/metalplate/product_report");
	}
	
	@RequestMapping("/productionStatusInput")
	public ModelAndView productionStatusInput(ModelMap modelMap) {
		return new ModelAndView("/report/metalplate/production_status_report");
	}
	
	@ResponseBody
	@RequestMapping(value = "/list")
	public JsonActionResult list(HttpServletResponse response, BootstrapTableQueryCriteria criteria,
			ModelMap modelMap) {
		criteria.setQueryRelationEntity(true);
		criteria.setFuzzyQueryFileds(Arrays.asList(new String[] { "PRESS", "PRODUCTION_DATE" }));
		criteria.setRows(criteria.getLimit());
		criteria.setPage(criteria.getOffset() / criteria.getLimit() + 1);
		criteria.setOrderField(criteria.getSort());
		criteria.setOrderDirection("desc".equalsIgnoreCase(criteria.getOrder()) ? OrderEnum.ASC : OrderEnum.DESC);
		return ActionUtils.handleListResult(response, productionRecordService.findBy(criteria));
	}
	
	@ResponseBody
	@RequestMapping("/everyDayPrd")
	public Map everyDayPrd(String time,String model,String prdLine){
		return productionRecordService.getEveryDayPrd(time, model, prdLine);
	}
	@ResponseBody
	@RequestMapping("/productionStatusData")
	public Map<String,Object> productionStatusData(String dataTime,Integer equipmentId,String shiftno){
		return productionRecordService.productionStatusData(dataTime,equipmentId,shiftno);
	}
}
